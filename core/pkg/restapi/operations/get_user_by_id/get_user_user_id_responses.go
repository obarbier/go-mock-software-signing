// Code generated by go-swagger; DO NOT EDIT.

package get_user_by_id

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/obarbier/custom-app/core/pkg/models"
)

// GetUserUserIDOKCode is the HTTP code returned for type GetUserUserIDOK
const GetUserUserIDOKCode int = 200

/*
GetUserUserIDOK OK

swagger:response getUserUserIdOK
*/
type GetUserUserIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserResponse `json:"body,omitempty"`
}

// NewGetUserUserIDOK creates GetUserUserIDOK with default headers values
func NewGetUserUserIDOK() *GetUserUserIDOK {

	return &GetUserUserIDOK{}
}

// WithPayload adds the payload to the get user user Id o k response
func (o *GetUserUserIDOK) WithPayload(payload *models.UserResponse) *GetUserUserIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user user Id o k response
func (o *GetUserUserIDOK) SetPayload(payload *models.UserResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserUserIDBadRequestCode is the HTTP code returned for type GetUserUserIDBadRequest
const GetUserUserIDBadRequestCode int = 400

/*
GetUserUserIDBadRequest The specified user ID is invalid (e.g. not a number).

swagger:response getUserUserIdBadRequest
*/
type GetUserUserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserUserIDBadRequest creates GetUserUserIDBadRequest with default headers values
func NewGetUserUserIDBadRequest() *GetUserUserIDBadRequest {

	return &GetUserUserIDBadRequest{}
}

// WithPayload adds the payload to the get user user Id bad request response
func (o *GetUserUserIDBadRequest) WithPayload(payload *models.Error) *GetUserUserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user user Id bad request response
func (o *GetUserUserIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserUserIDUnauthorizedCode is the HTTP code returned for type GetUserUserIDUnauthorized
const GetUserUserIDUnauthorizedCode int = 401

/*
GetUserUserIDUnauthorized unauthorized

swagger:response getUserUserIdUnauthorized
*/
type GetUserUserIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserUserIDUnauthorized creates GetUserUserIDUnauthorized with default headers values
func NewGetUserUserIDUnauthorized() *GetUserUserIDUnauthorized {

	return &GetUserUserIDUnauthorized{}
}

// WithPayload adds the payload to the get user user Id unauthorized response
func (o *GetUserUserIDUnauthorized) WithPayload(payload *models.Error) *GetUserUserIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user user Id unauthorized response
func (o *GetUserUserIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUserIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserUserIDNotFoundCode is the HTTP code returned for type GetUserUserIDNotFound
const GetUserUserIDNotFoundCode int = 404

/*
GetUserUserIDNotFound A user with the specified ID was not found.

swagger:response getUserUserIdNotFound
*/
type GetUserUserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserUserIDNotFound creates GetUserUserIDNotFound with default headers values
func NewGetUserUserIDNotFound() *GetUserUserIDNotFound {

	return &GetUserUserIDNotFound{}
}

// WithPayload adds the payload to the get user user Id not found response
func (o *GetUserUserIDNotFound) WithPayload(payload *models.Error) *GetUserUserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user user Id not found response
func (o *GetUserUserIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetUserUserIDDefault error

swagger:response getUserUserIdDefault
*/
type GetUserUserIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserUserIDDefault creates GetUserUserIDDefault with default headers values
func NewGetUserUserIDDefault(code int) *GetUserUserIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUserUserIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get user user ID default response
func (o *GetUserUserIDDefault) WithStatusCode(code int) *GetUserUserIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get user user ID default response
func (o *GetUserUserIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get user user ID default response
func (o *GetUserUserIDDefault) WithPayload(payload *models.Error) *GetUserUserIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user user ID default response
func (o *GetUserUserIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUserIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
