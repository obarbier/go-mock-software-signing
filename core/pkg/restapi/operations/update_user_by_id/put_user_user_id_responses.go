// Code generated by go-swagger; DO NOT EDIT.

package update_user_by_id

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/obarbier/custom-app/core/pkg/models"
)

// PutUserUserIDOKCode is the HTTP code returned for type PutUserUserIDOK
const PutUserUserIDOKCode int = 200

/*
PutUserUserIDOK OK

swagger:response putUserUserIdOK
*/
type PutUserUserIDOK struct {
}

// NewPutUserUserIDOK creates PutUserUserIDOK with default headers values
func NewPutUserUserIDOK() *PutUserUserIDOK {

	return &PutUserUserIDOK{}
}

// WriteResponse to the client
func (o *PutUserUserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutUserUserIDBadRequestCode is the HTTP code returned for type PutUserUserIDBadRequest
const PutUserUserIDBadRequestCode int = 400

/*
PutUserUserIDBadRequest bad request body

swagger:response putUserUserIdBadRequest
*/
type PutUserUserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.UserResponse `json:"body,omitempty"`
}

// NewPutUserUserIDBadRequest creates PutUserUserIDBadRequest with default headers values
func NewPutUserUserIDBadRequest() *PutUserUserIDBadRequest {

	return &PutUserUserIDBadRequest{}
}

// WithPayload adds the payload to the put user user Id bad request response
func (o *PutUserUserIDBadRequest) WithPayload(payload *models.UserResponse) *PutUserUserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user user Id bad request response
func (o *PutUserUserIDBadRequest) SetPayload(payload *models.UserResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserUserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserUserIDUnauthorizedCode is the HTTP code returned for type PutUserUserIDUnauthorized
const PutUserUserIDUnauthorizedCode int = 401

/*
PutUserUserIDUnauthorized unauthorized

swagger:response putUserUserIdUnauthorized
*/
type PutUserUserIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserUserIDUnauthorized creates PutUserUserIDUnauthorized with default headers values
func NewPutUserUserIDUnauthorized() *PutUserUserIDUnauthorized {

	return &PutUserUserIDUnauthorized{}
}

// WithPayload adds the payload to the put user user Id unauthorized response
func (o *PutUserUserIDUnauthorized) WithPayload(payload *models.Error) *PutUserUserIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user user Id unauthorized response
func (o *PutUserUserIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserUserIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserUserIDNotFoundCode is the HTTP code returned for type PutUserUserIDNotFound
const PutUserUserIDNotFoundCode int = 404

/*
PutUserUserIDNotFound A user with the specified ID was not found.

swagger:response putUserUserIdNotFound
*/
type PutUserUserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserUserIDNotFound creates PutUserUserIDNotFound with default headers values
func NewPutUserUserIDNotFound() *PutUserUserIDNotFound {

	return &PutUserUserIDNotFound{}
}

// WithPayload adds the payload to the put user user Id not found response
func (o *PutUserUserIDNotFound) WithPayload(payload *models.Error) *PutUserUserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user user Id not found response
func (o *PutUserUserIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutUserUserIDDefault error

swagger:response putUserUserIdDefault
*/
type PutUserUserIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserUserIDDefault creates PutUserUserIDDefault with default headers values
func NewPutUserUserIDDefault(code int) *PutUserUserIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutUserUserIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put user user ID default response
func (o *PutUserUserIDDefault) WithStatusCode(code int) *PutUserUserIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put user user ID default response
func (o *PutUserUserIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put user user ID default response
func (o *PutUserUserIDDefault) WithPayload(payload *models.Error) *PutUserUserIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user user ID default response
func (o *PutUserUserIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserUserIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
